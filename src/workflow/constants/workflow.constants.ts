import { config } from 'dotenv';
config();

export const WORKFLOW_CONSTANTS = {
  DEFAULT_TIMEOUT_MS: Number(process.env['DEFAULT_TIMEOUT_MS']) || 30000,
  DEFAULT_RETRIES: Number(process.env['DEFAULT_RETRIES']) || 3,
  MAX_CONCURRENT_TASKS: Number(process.env['MAX_CONCURRENT_TASKS']) || 10,
  RETRY_DELAY_MS: Number(process.env['RETRY_DELAY_MS']) || 100,
  
  TASK_STATUS: {
    PENDING: 'PENDING',
    RUNNING: 'RUNNING',
    COMPLETED: 'COMPLETED',
    FAILED: 'FAILED',
    SKIPPED: 'SKIPPED'
  } as const,
  
  WORKFLOW_STATUS: {
    RUNNING: 'RUNNING',
    COMPLETED: 'COMPLETED',
    FAILED: 'FAILED'
  } as const,
  
  EVENT_TYPES: {
    TASK_STARTED: 'TASK_STARTED',
    TASK_COMPLETED: 'TASK_COMPLETED',
    TASK_FAILED: 'TASK_FAILED',
    TASK_RETRY: 'TASK_RETRY',
    TASK_SKIPPED: 'TASK_SKIPPED'
  } as const,
  
  ERROR_CODES: {
    TASK_TIMEOUT: 'TASK_TIMEOUT',
    TASK_RETRY: 'TASK_RETRY',
    TASK_PERMANENT_FAILURE: 'TASK_PERMANENT_FAILURE',
    CIRCULAR_DEPENDENCY: 'CIRCULAR_DEPENDENCY',
    DEPENDENCY_NOT_FOUND: 'DEPENDENCY_NOT_FOUND',
    INVALID_TASK_CONFIGURATION: 'INVALID_TASK_CONFIGURATION',
    WORKFLOW_VALIDATION: 'WORKFLOW_VALIDATION',
    CONCURRENT_EXECUTION_ERROR: 'CONCURRENT_EXECUTION_ERROR',
    QUEUE_FULL: 'QUEUE_FULL',
    INVALID_HANDLER: 'INVALID_HANDLER'
  } as const,
  
  VALIDATION: {
    MAX_TASK_ID_LENGTH: 100,
    MAX_DEPENDENCIES_PER_TASK: 10,
    MAX_RETRIES: 10,
    MAX_TIMEOUT_MS: 30000,
    MIN_TIMEOUT_MS: 100,
    MIN_RETRIES: 0
  } as const,
  
  QUEUE: {
    MAX_SIZE: 10,
    PROCESSING_INTERVAL_MS: 50
  } as const,
  
  PERFORMANCE: {
    MAX_WORKFLOW_DURATION_MS: 360000,
    MAX_TASK_DURATION_MS: 30000,
    MEMORY_THRESHOLD_MB: 512
  } as const
} as const;

export const ENVIRONMENT_CONFIG = {
  NODE_ENV: process.env['NODE_ENV'] || 'development',
  PORT: parseInt(process.env['PORT'] || '3000', 10),
  DEFAULT_TIMEOUT_MS: parseInt(process.env['DEFAULT_TIMEOUT_MS'] || WORKFLOW_CONSTANTS.DEFAULT_TIMEOUT_MS.toString(), 10),
  DEFAULT_RETRIES: parseInt(process.env['DEFAULT_RETRIES'] || WORKFLOW_CONSTANTS.DEFAULT_RETRIES.toString(), 10),
  MAX_CONCURRENT_TASKS: parseInt(process.env['MAX_CONCURRENT_TASKS'] || WORKFLOW_CONSTANTS.MAX_CONCURRENT_TASKS.toString(), 10),
  RETRY_DELAY_MS: parseInt(process.env['RETRY_DELAY_MS'] || WORKFLOW_CONSTANTS.RETRY_DELAY_MS.toString(), 10),
  API_BASE_URL: process.env['API_BASE_URL'] || 'https://jsonplaceholder.typicode.com',
  API_TIMEOUT_MS: parseInt(process.env['API_TIMEOUT_MS'] || '5000', 10),
} as const;

export type TaskStatus = typeof WORKFLOW_CONSTANTS.TASK_STATUS[keyof typeof WORKFLOW_CONSTANTS.TASK_STATUS];
export type WorkflowStatus = typeof WORKFLOW_CONSTANTS.WORKFLOW_STATUS[keyof typeof WORKFLOW_CONSTANTS.WORKFLOW_STATUS];
export type EventType = typeof WORKFLOW_CONSTANTS.EVENT_TYPES[keyof typeof WORKFLOW_CONSTANTS.EVENT_TYPES];
export type ErrorCode = typeof WORKFLOW_CONSTANTS.ERROR_CODES[keyof typeof WORKFLOW_CONSTANTS.ERROR_CODES]; 
